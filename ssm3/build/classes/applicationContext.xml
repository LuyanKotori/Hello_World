<?xml version="1.0" encoding="utf-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:p="http://www.springframework.org/schema/p" 
    xsi:schemaLocation="  
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd  
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"  
            default-autowire="byName" default-lazy-init="false"> 
    <!-- 扫描service接口的基础包 -->
     <context:component-scan base-package="com.li.service"/>
    
   <!-- dataSource表示数据源 class表示当前bean标签所对应的类地址 
   p:maxActive表示当前程序最大活动链接数
   p:maxIdle表示当前程序最大闲暇时连接数
   叫spring来管理mybatis连接数据库
   -->
   <!-- c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/company?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="user" value="root" />
		<property name="password" value="123" />
	</bean>
	
	
	
	<!-- 表示事务管理器  ref映射到id为dataSource的bean标签，其实就是映射到数据库连接 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  <property name="dataSource" ref="dataSource" />
	</bean>
	
	 <!-- 配置mybatis配置文件 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
     <!--dataSource属性指定要用到的连接池--> 
     <property name="dataSource" ref="dataSource"/> 
     <!--configLocation属性指定mybatis的核心配置文件--> 
     <property name="configLocation" value="classpath:mybatis-config.xml" /> 
     <!-- 所有配置的mapper文件,mybatis的实体类配置文件 -->
     <property name="mapperLocations" value="classpath:com/li/dao/mapper/*.xml"></property>
  </bean> 
	 <!-- 扫描各种模块的统一接口地址 
  	注意：这里的vlaue只能出现一个接口类地址基础包路径
  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.li.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

  
  <!--   文件上传的配置 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">     
    <!--    指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和      -->
       <property name="maxUploadSize" value="9000000000000"/>     
   </bean>     
       
  <!--  该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中      -->
   <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">     
       <property name="exceptionMappings">     
           <props>     
             <!--   遇到MaxUploadSizeExceededException异常时，自动跳转到WebContent目录下的error.jsp页面      -->
               <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error</prop>     
           </props>     
       </property>     
   </bean> 
 
 
  
</beans> 